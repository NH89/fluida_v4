num genes = 16,	num transcription factors = 16 
mutability, delay,	sensitivity[NUM_GENES],	,	,	,	,	,	,	,	,	,	,	,	,	,	,	,	secrete[NUM_TF][2],,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	secrete[2*NUM_TF], activate[NUM_GENES][2],,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	,,	activate[2*NUM_GENES] 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		1,1,	3,4,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			2,		5,6,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			1,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 
0,	1,		0,	1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	 		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,	0,0,			0,		 

Transcription Factors (tf_difusibility,tf_breakdown_rate) 
	0,	1,		0,	1,		0,	1,		0,	1,		0,	1,		0,	1,		0,	1,		0,	1,		1,	1,		1,	1,		1,	1,		1,	1,		1,	1,		1,	1,		1,	1,		1,	1,	

Remodelling parameters, rows : elastin,collagen,apatite
collumns : /*triggering bond parameter changes*/, /*triggering particle changes*/, /*initial values for new bonds*/
elongation_threshold,	elongation_factor,	strength_threshold,	strengthening_factor,		    max_rest_length,	min_rest_length,	max_modulus,			min_modulus,		    elastLim,	default_rest_length,	default_modulus,	default_damping
	0.500000,		0.002000,		1.000000,		0.002000,		1.000000,		0.300000,		100000.000000,		10.000000,		8.000000,		0.500000,		1000.000000,		10.000000,	
	4.000000,		0.010000,		4.100000,		0.010000,		1.000000,		0.300000,		1000000000.000000,		1000000.000000,		0.550000,		0.500000,		10000000.000000,		100.000000,	
	1.000000,		0.001000,		1.000000,		0.001000,		1.000000,		0.300000,		1000000000.000000,		1000000.000000,		0.050000,		0.500000,		10000000.000000,		1000.000000,	


Bond remodelling m_FGenome.tanh_param[3][8] parameters, rows : elastin,collagen,apatite
collumns : lengthen/shorten, strengthen/weaken
l_a (y-shift),	 l_b (y-scaling),	 l_c (x-scaling),	 l_d (x-shift),		 s_a (y-shift),	 s_b (y-scaling),	 s_c (x-scaling),	 s_d (x-shift)
	0.000000,		0.000000,		0.000000,		0.000000,		1.008000,		0.010000,		10.000000,		7.000000,	
	0.000000,		0.000000,		0.000000,		0.000000,		0.000000,		0.000000,		0.000000,		0.000000,	
	0.000000,		0.000000,		0.000000,		0.000000,		0.000000,		0.000000,		0.000000,		0.000000,	


    struct FGenome{   // ## currently using fixed size genome for efficiency. NB Particle data size depends on genome size.
        uint mutability[NUM_GENES];
        uint delay[NUM_GENES];
        uint sensitivity[NUM_GENES][NUM_GENES];     // for each gene, its sensitivity to each TF or morphogen
        uint tf_diffusability[NUM_TF];              // for each transcription_factor, the diffusion and breakdown rates of its TF.
        uint tf_breakdown_rate[NUM_TF];
                                                    // sparse lists final entry = num elem, other entries (elem_num, param)
        int secrete[NUM_GENES][2*NUM_TF+1];         // -ve secretion => active breakdown. Can be useful for pattern formation.
        int activate[NUM_GENES][2*NUM_GENES+1];
        //uint *function[NUM_GENES];                // cancelled// Hard code a case-switch that calls each gene's function iff the gene is active.
        enum {elastin,collagen,apatite};
                                                    //FBondParams fbondparams[3];   // 0=elastin, 1=collagen, 2=apatite
        
        enum params{  /*triggering bond parameter changes*/ elongation_threshold,   elongation_factor,      strength_threshold,     strengthening_factor,
                      /*triggering particle changes*/       max_rest_length,        min_rest_length,        max_modulus,            min_modulus,
                      /*initial values for new bonds*/      elastLim,               default_rest_length,    default_modulus,        default_damping
        };
        float param[3][12];
    };
    